version: '3.8'

services:
  # MinIO for file storage (KYC documents, evidence files)
  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - p2p_network

  # KYC Service
  kyc-service:
    build:
      context: ./services/kyc
      dockerfile: Dockerfile
    container_name: kyc-service
    depends_on:
      - postgres
      - redis
      - minio
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=p2padmin
      - DB_PASSWORD=securepassword123
      - DB_NAME=p2p_bolivia
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - PORT=3005
    ports:
      - "3005:3005"
    networks:
      - p2p_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3005/health"]
      timeout: 5s
      retries: 3

  # Dispute Service
  dispute-service:
    build:
      context: ./services/dispute
      dockerfile: Dockerfile
    container_name: dispute-service
    depends_on:
      - postgres
      - redis
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=p2padmin
      - DB_PASSWORD=securepassword123
      - DB_NAME=p2p_bolivia
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - PORT=3006
    ports:
      - "3006:3006"
    networks:
      - p2p_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3006/health"]
      timeout: 5s
      retries: 3

  # Chat Service
  chat-service:
    build:
      context: ./services/chat
      dockerfile: Dockerfile
    container_name: chat-service
    depends_on:
      - postgres
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=p2padmin
      - DB_PASSWORD=securepassword123
      - DB_NAME=p2p_bolivia
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - PORT=3007
    ports:
      - "3007:3007"
    networks:
      - p2p_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3007/health"]
      timeout: 5s
      retries: 3

  # Analytics Service
  analytics-service:
    build:
      context: ./services/analytics
      dockerfile: Dockerfile
    container_name: analytics-service
    depends_on:
      - postgres
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=p2padmin
      - DB_PASSWORD=securepassword123
      - DB_NAME=p2p_bolivia
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - PORT=3008
    ports:
      - "3008:3008"
    networks:
      - p2p_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3008/health"]
      timeout: 5s
      retries: 3

volumes:
  minio_data:
    driver: local

networks:
  p2p_network:
    external: true